// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.DAL;

namespace api.Migrations
{
    [DbContext(typeof(dataContext))]
    [Migration("20210302120215_intitial")]
    partial class intitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("api.DAL.models.Class_Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("image")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("liscense_to_kill")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("profession")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("selected_hospital_id")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("user_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("api.DAL.models.Class_Hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Fax")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HospitalName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HospitalNo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OpReportDetails1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OpReportDetails2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OpReportDetails3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OpReportDetails4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OpReportDetails5")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OpReportDetails6")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OpReportDetails7")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OpReportDetails8")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OpReportDetails9")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RegExpr")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SampleMrn")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Selected_Hospital_Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telephone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("api.DAL.models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("IBAN")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Interests")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Introduction")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("KnownAs")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LookingFor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Role")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("hospital_id")
                        .HasColumnType("int");

                    b.Property<bool>("ltk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("worked_in")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
